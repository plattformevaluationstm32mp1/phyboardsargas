-------------
Package name:
-------------
STM32CubeMX-phytec-PD22.1.0.zip


-----------------
Date of creation:
-----------------
2022-07-12


----------------
Package content:
----------------
- STM32CubeMX project-files (.ioc) for phyCORE-STM32MP1 and phyBOARD-Sargas Hardware platforms. 
  => in directories "phyCORE-STM32MP1" and "phyCORE-STM32MP1_with_phyBOARD-Sargas"
  Those projects are best configured for STM32CubeMX v6.4.0 usage:
   - the FW_MP1 package is set to V1.5.0
   - the openSTLinux setting is consequently set automatically (in CubeMX tool) to "openstlinux-5.10-dunfell-mp1-21-11-17" manifest

- Device Tree sources templates (.dts, .dtsi) based on PHYTEC BSP PD22.1.0.
  => in directory "DeviceTree_templates"


----------------
Package Purpose:
----------------
The intention of those STM32CubeMX project files is to give customers the ability to use STM32CubeMX for their custom-specific pinmux conceptions.
Those projects also give the ability to use the STM32CubeMX tool for Software automatic code generation: in association with the provided device tree templates, it is possible to generate device tree "ready to build" for our phyCORE-STM32MP1 / phyBOARD-Sargas.

The files contain the fixed pinmux, as well as clocks and DDR configurations specified by the Hardware:
- phyCORE-STM32MP1 (PCM-068/PCL-068 - PCB 1534.1)
- phyCORE-STM32MP1 + phyBOARD-Sargas (PCM-939 - PCB 1517.2/1517.2a , PCM939L - PCB 4650.2)


----------------------
Hardware declinations:
----------------------
phyCORE-STM32MP1 (+ phyBOARD-Sargas) are declined in standard "machines" (SOM equipped with different STM32MP15 SoC product line and/or different FLASH memory):
- phycore-stm32mp-2: phyCORE-STM32MP1+phyBOARD-Sargas, stm32mp157aac (@650Mhz MPU, 3D GPU), 1GiB RAM, 8GiB eMMC, 16MB QSPI NOR
- phycore-stm32mp-3: phyCORE-STM32MP1+phyBOARD-Sargas, stm32mp157cac (@650Mhz MPU, 3D GPU), 1GiB RAM, 8GiB eMMC, 16MB QSPI NOR
- phycore-stm32mp-4: phyCORE-STM32MP1+phyBOARD-Sargas, stm32mp157fac (@800Mhz MPU, 3D GPU), 1GiB RAM, 8GiB eMMC, 16MB QSPI NOR
- phycore-stm32mp-5: phyCORE-STM32MP1+phyBOARD-Sargas, stm32mp153aac (@650Mhz MPU, no 3D GPU), 1GiB RAM, 8GiB eMMC
- phycore-stm32mp-6: phyCORE-STM32MP1+phyBOARD-Sargas, stm32mp153aac (@650Mhz MPU, no 3D GPU), 512MB RAM, 512MB NAND
- phycore-stm32mp-7: phyCORE-STM32mp1+phyBOARD-Sargas, stm32mp153aac (@650Mhz MPU, no 3D GPU), 512MB RAM, 128MB NAND

Notes:
------
1) Currently, there is only one version of the phyBOARD-Sargas. That's why, the machines differ only because of the phyCORE-STM32MP1 different declinations.
2) Currently only the following machines are officially supported within our Yocto STM32MP1 BSP:
  - phycore-stm32mp-3
  - phycore-stm32mp-4
  - phycore-stm32mp-6
Others machines are currently not standards, and so, we do not support them within our BSP (not tested).
3) Our Yocto BSP is only fully tested using our upstream device tree (that can be found in our PHYTEC git: git.phytec.de).
So please, be aware that using the CubeMX generated device tree for the phyCORE-STM32MP1/phyBOARD-Sargas is under your responsibility.


----------------------------------------------------------------------------------------------------------------------
Procedure to create your own CubeMX project based on our phyCORE-STM32MP1 SOM (and eventually on our phyBOARD-Sargas):
----------------------------------------------------------------------------------------------------------------------
1) Copy one of the project (.ioc) that we provide (the one which fit the best your need) and rename the file to match your project: <project>.ioc. For example: myboard.ioc.
Please refer to the last section "Archive directories content details" of this note to know how to choose the project that fit the best your need.

2) Open this project with STM32CubeMX. Then save it. (the CubeMX project name is based on the .ioc file name and is updated as soon as you open and save the project).


---------------------------------------------------------------------
CubeMX tool configuration for Device Tree files automatic generation:
---------------------------------------------------------------------

* Introduction:
---------------
The STM32CubeMX can be used to generate the Device Tree files (Cortex-A7) or STM32Cube HAL code (Cortex-M4) for each of the above machines.
As the generated device tree sources (.dts) do not contain all the necessary device tree properties (dependent on BSP drivers), some manual code ("User code") needs to be added in specific sections of the generated files.
Please refer to the BSP manual for more details: https://www.phytec.de/produkte/system-on-modules/phycore-stm32mp1/#downloads/ (BSP manual is in section "Software / Yocto + Linux BSP-Releases")

* Procedure to configure CubeMX with "User code" sections automatically filled (dts "ready to build" for the phyCORE - with or without phyBOARD):
-------------------------------------------------------------------------------------------------------------------------------------------------
To generate the "ready to build" Device Tree of the above machines (i.e ".dts" that can be directly build without any modifications), we provide device tree templates that already contain the "user code" sections that is added automatically to the generated dts files.

By default, with the CubeMX projects that we provide, when generating the code, the STM32CubeMX tool will look for those templates in a specific directory.
So, it is necessary to copy the provided DTS templates into the following subdirectory of your STM32CubeMX installation path:
"/db/templates/DeviceTree/dtsBoards/STM32MP1"

=> Simply copy the content of "DeviceTree_templates" ("STM32MP15xx-PHYBOARD" and "STM32MP15xx-PHYCORE" directories) into this STM32CubeMX installation path subdirectory.

After doing this, the STM32CubeMX code generator will automatically make the link with the corresponding template using the "board" paramater (set to "STM32MP15xx-PHYCORE" or "STM32MP15xx-PHYBOARD" in our .ioc project).
If the templates are not present in the STM32CubeMX specific directory, the device tree generation will fail.


* Procedure to configure CubeMX without "User code" sections filled:
--------------------------------------------------------------------
In this case, all the needed manual code for our SOM/Carrier board will not be present in the generated device tree (our provided device tree templates are not used).
To do that, the CubeMX projects that we provide must be modified this way:

Open the .ioc file, and at the end of the file, modify the "board" parameter to "custom":
board=custom
Then save the .ioc file.
After that, the code generation should succeed but wihout any "user code" added automatically.

Without this .ioc modification, STM32CubeMX will still look for the device tree templates specified by the "board" parameter. And if corresponding templates are not present in the STM32CubeMX specific installation path ("/db/templates/DeviceTree/dtsBoards/STM32MP1"), the device tree generation will fail.


------------------------------------
Archive directories content details:
------------------------------------
.
├── DeviceTree_templates				-> Contains the DTS templates
│   │
│   ├── STM32MP153A-PHYBOARD				   -> dts templates for phyBOARD-Sargas+phyCORE-STM32MP1 based on STM32MP153A SoC
│   │   ├── kernel					       -> template for kernel
│   │   ├── tf-a					       -> template for tf-a
│   │   └── u-boot					       -> template for u-boot
│   │
│   ├── STM32MP153A-PHYCORE				   -> dts templates for phyCORE-STM32MP1 based on STM32MP153A SoC
│   │   ├── kernel					       -> template for kernel
│   │   ├── tf-a					       -> template for tf-a
│   │   └── u-boot					       -> template for u-boot
│   │
│   ├── STM32MP157A-PHYBOARD				   -> dts templates for phyBOARD-Sargas+phyCORE-STM32MP1 based on STM32MP157A SoC
│   │   ├── kernel					       -> template for kernel
│   │   ├── tf-a					       -> template for tf-a
│   │   └── u-boot					       -> template for u-boot
│   │
│   ├── STM32MP157A-PHYCORE				   -> dts templates for phyCORE-STM32MP1 based on STM32MP157A SoC
│   │   ├── kernel					       -> template for kernel
│   │   ├── tf-a					       -> template for tf-a
│   │   └── u-boot					       -> template for u-boot
│   │
│   ├── STM32MP157C-PHYBOARD				   -> dts templates for phyBOARD-Sargas+phyCORE-STM32MP1 based on STM32MP157C SoC
│   │   ├── kernel					       -> template for kernel
│   │   ├── tf-a					       -> template for tf-a
│   │   └── u-boot					       -> template for u-boot
│   │
│   ├── STM32MP157C-PHYCORE				   -> dts templates for phyCORE-STM32MP1 based on STM32MP157C SoC
│   │   ├── kernel					       -> template for kernel
│   │   ├── tf-a					       -> template for tf-a
│   │   └── u-boot					       -> template for u-boot
│   │
│   ├── STM32MP157F-PHYBOARD				   -> dts templates for phyBOARD-Sargas+phyCORE-STM32MP1 based on STM32MP157F SoC
│   │   ├── kernel					       -> template for kernel
│   │   ├── tf-a					       -> template for tf-a
│   │   └── u-boot					       -> template for u-boot
│   │
│   └── STM32MP157F-PHYCORE				   -> dts templates for phyCORE-STM32MP1 based on STM32MP157F SoC
│       ├── kernel					       -> template for kernel
│       ├── tf-a					       -> template for tf-a
│       └── u-boot					       -> template for u-boot
│   
├── phyCORE-STM32MP1					-> Contains the CubeMX pinmux of phyCORE-STM32MP (PCM-068) only (no phyBOARD)
│   │
│   ├── all_phyCORE_NAND_eMMC_NOR_pins_reserved            -> all standard machines (pins used for NAND, eMMC and NOR are all reserved (*))
│   │   ├── phycore-stm32mp1-2				      -> contains STM32CubeMX project of "phycore-stm32mp1-2" (without phyBOARD)
│   │   ├── phycore-stm32mp1-3				      -> contains STM32CubeMX project of "phycore-stm32mp1-3" (without phyBOARD)
│   │   ├── phycore-stm32mp1-4				      -> contains STM32CubeMX project of "phycore-stm32mp1-4" (without phyBOARD)
│   │   ├── phycore-stm32mp1-5				      -> contains STM32CubeMX project of "phycore-stm32mp1-5" (without phyBOARD)
│   │   └── phycore-stm32mp1-6-7			      -> contains STM32CubeMX project of "phycore-stm32mp1-6" or "phycore-stm32mp1-7" (without phyBOARD-Sargas)
│   │
│   ├── phyCORE_with_eMMC_NOR         			   -> standard machines equipped with eMMC and NOR (pins used for NAND are free)
│   │   ├── phycore-stm32mp1-2				      -> contains STM32CubeMX project of "phycore-stm32mp1-2" (without phyBOARD)
│   │   ├── phycore-stm32mp1-3				      -> contains STM32CubeMX project of "phycore-stm32mp1-3" (without phyBOARD)
│   │   └── phycore-stm32mp1-4				      -> contains STM32CubeMX project of "phycore-stm32mp1-4" (without phyBOARD)
│   │ 
│   ├── phyCORE_with_eMMC_without_NOR			   -> standard machines equipped with eMMC without NOR (pins used for NAND and NOR are free)
│   │   └── phycore-stm32mp1-5				      -> contains STM32CubeMX project of "phycore-stm32mp1-5" (without phyBOARD)
│   └── phyCORE_with_NAND_without_NOR			   -> standard machines equipped with NAND without NOR (pins used for eMMC and NOR are free)
│       └── phycore-stm32mp1-6-7			      -> contains STM32CubeMX project of "phycore-stm32mp1-6" or "phycore-stm32mp1-7" (without phyBOARD)
│  
│  
└── phyCORE-STM32MP1_with_phyBOARD-Sargas		-> Contains the CubeMX pinmux of phyCORE-STM32MP (PCM-068) + phyBOARD-Sargas (PCM-939)
    │
    ├── all_phyCORE_NAND_eMMC_NOR_pins_reserved            -> all standard machines (pins used for NAND, eMMC and NOR are all reserved (*))
    │   ├── phycore-stm32mp1-2_phyboard-sargas		      -> contains STM32CubeMX project of "phycore-stm32mp1-2"
    │   ├── phycore-stm32mp1-3_phyboard-sargas		      -> contains STM32CubeMX project of "phycore-stm32mp1-3"
    │   ├── phycore-stm32mp1-4_phyboard-sargas		      -> contains STM32CubeMX project of "phycore-stm32mp1-4"
    │   ├── phycore-stm32mp1-5_phyboard-sargas		      -> contains STM32CubeMX project of "phycore-stm32mp1-5"
    │   └── phycore-stm32mp1-6-7_phyboard-sargas	      -> contains STM32CubeMX project of "phycore-stm32mp1-6" or "phycore-stm32mp1-7"
    │
    ├── phyCORE_with_eMMC_NOR				   -> standard machines equipped with eMMC and NOR (pins used for NAND are free)
    │   ├── phycore-stm32mp1-2_phyboard-sargas		      -> contains STM32CubeMX project of "phycore-stm32mp1-2"
    │   ├── phycore-stm32mp1-3_phyboard-sargas		      -> contains STM32CubeMX project of "phycore-stm32mp1-3"
    │   └── phycore-stm32mp1-4_phyboard-sargas		      -> contains STM32CubeMX project of "phycore-stm32mp1-4"
    │
    ├── phyCORE_with_eMMC_without_NOR			   -> standard machines equipped with eMMC without NOR (pins used for NAND and NOR are free)
    │   └── phycore-stm32mp1-5_phyboard-sargas		      -> contains STM32CubeMX project of "phycore-stm32mp1-5"
    │
    └── phyCORE_with_NAND_without_NOR			   -> standard machines equipped with NAND without NOR (pins used for eMMC and NOR are free)
        └── phycore-stm32mp1-6-7_phyboard-sargas	      -> contains STM32CubeMX project of "phycore-stm32mp1-6" or "phycore-stm32mp1-7"

(*) ==> CubeMX projects which must be used to keep pinmux compatibility between SOMs equipped with different FLASH (NAND/eMMC/NOR):
In those projects the pins used for the FLASH memories (FMC, QSPI and SDMMC2 signals) are all reserved (not free to use). If compatibility is not required, and if more pinmux choice is needed, the other CubeMX projects can be used.

